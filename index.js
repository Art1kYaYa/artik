const TelegramBot = require('node-telegram-bot-api');
const fs = require('fs');

const token = '7758731240:AAHEtPHVTX-CfWqlwVk7zTim1_SwUHqFbcc';
const bot = new TelegramBot(token, { polling: true });
const adminChatId = -1002400665091; // ID –∞–¥–º–∏–Ω—Å–∫–æ–≥–æ —á–∞—Ç–∞

const usersFile = './users.json';
const finesFile = './fines.json';


const taxWorkers = [1378783537, 2030128216, 7045248304];  


let users = loadData(usersFile) || {};
let fines = loadData(finesFile) || {};
const authorizedUsers = []; 
const employees = []; 

function loadData(filename) {
  if (fs.existsSync(filename)) {
    const data = fs.readFileSync(filename, 'utf-8');
    return JSON.parse(data);
  }
  return null;
}

function saveData(filename, data) {
  fs.writeFileSync(filename, JSON.stringify(data, null, 2));
}

// –ö–æ–º–∞–Ω–¥–∞ /help
bot.onText(/\/help/, (msg) => {
  const chatId = msg.chat.id;

  bot.sendMessage(
    chatId,
  `üÜò –°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥:\n\n` +
  `/balance - –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å.\n` +
  `/check_fines - –ü–æ–∫–∞–∑–∞—Ç—å –Ω–µ–æ–ø–ª–∞—á–µ–Ω–Ω—ã–µ —à—Ç—Ä–∞—Ñ—ã.\n` +
  `/pay <—Å—É–º–º–∞> - –û–ø–ª–∞—Ç–∏—Ç—å —à—Ç—Ä–∞—Ñ (–ø—Ä–∏–º–µ—Ä: /pay 50).\n` +
  `/archive - –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∞—Ä—Ö–∏–≤ —à—Ç—Ä–∞—Ñ–æ–≤.\n` +
  `/contact - –ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è.\n` +
  `/start - –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.\n` +


  `–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —ç—Ç–∏ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –±–æ—Ç–æ–º!`
     );

  });


function isTaxWorker(userId) {
  return taxWorkers.includes(userId);
}

bot.onText(/\/promo/, (msg) => {
  const chatId = msg.chat.id;

  bot.sendMessage(
    chatId,
    `üéâ **–ö–æ–Ω–∫—É—Ä—Å –¥–ª—è –≤—Å–µ—Ö –Ω–∞—à–∏—Ö –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤!** üéâ\n\n` +
    `–ú—ã —Ä–∞–¥—ã –æ–±—ä—è–≤–∏—Ç—å –æ –Ω–æ–≤–æ–º –∫–æ–Ω–∫—É—Ä—Å–µ, –≤ –∫–æ—Ç–æ—Ä–æ–º —É –≤–∞—Å –µ—Å—Ç—å —à–∞–Ω—Å –≤—ã–∏–≥—Ä–∞—Ç—å –∫–ª–∞—Å—Å–Ω—ã–µ –ø—Ä–∏–∑—ã! üéÅ\n\n` +
    `**–£—Å–ª–æ–≤–∏—è —É—á–∞—Å—Ç–∏—è:**\n` +
    `1Ô∏è‚É£ –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –Ω–∞—à—É —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤ –í–ö–æ–Ω—Ç–∞–∫—Ç–µ.\n` +
    `2Ô∏è‚É£ –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –¢–µ–ª–µ–≥—Ä–∞–º-–∫–∞–Ω–∞–ª –Ω–∞—à–µ–≥–æ –¥—Ä—É–≥–∞.\n\n` +
    `**–ü—Ä–∏–∑:**\n` +
    `üèÜ –ù–∞—É—à–Ω–∏–∫–∏ Fuxi H3\n\n` +
    `üóì –ò—Ç–æ–≥–∏ –±—É–¥—É—Ç –ø–æ–¥–≤–µ–¥–µ–Ω—ã **8 –¥–µ–∫–∞–±—Ä—è 2024**.\n\n` +
    `–ù–µ —É–ø—É—Å—Ç–∏—Ç–µ —Å–≤–æ–π —à–∞–Ω—Å –≤—ã–∏–≥—Ä–∞—Ç—å –∏ —Å—Ç–∞—Ç—å —á–∞—Å—Ç—å—é –Ω–∞—à–µ–≥–æ —Å–æ–æ–±—â–µ—Å—Ç–≤–∞! –£–¥–∞—á–∏ –≤—Å–µ–º —É—á–∞—Å—Ç–Ω–∏–∫–∞–º! üçÄ`,
    {
      parse_mode: 'Markdown',
      reply_markup: {
        inline_keyboard: [
          [
            { text: 'üìò –í–ö–æ–Ω—Ç–∞–∫—Ç–µ', url: 'https://vk.com/havitru' }, // –£–∫–∞–∂–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –í–ö–æ–Ω—Ç–∞–∫—Ç–µ
          ],
          [
            { text: 'üì¢ –¢–µ–ª–µ–≥—Ä–∞–º-–∫–∞–Ω–∞–ª', url: 'https://t.me/+dt8Sh8x762FmYWYy' }, // –£–∫–∞–∂–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –¢–µ–ª–µ–≥—Ä–∞–º-–∫–∞–Ω–∞–ª
          ],
          [
            { text: '‚ùå –ó–∞–∫—Ä—ã—Ç—å', callback_data: 'close_promo' },
          ],
        ],
      },
    }
  );
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ "–ó–∞–∫—Ä—ã—Ç—å"
bot.on('callback_query', (callbackQuery) => {
  const chatId = callbackQuery.message.chat.id;
  const messageId = callbackQuery.message.message_id;

  if (callbackQuery.data === 'close_promo') {
    bot.deleteMessage(chatId, messageId).catch((err) => {
      console.error(`–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è: ${err.message}`);
    });
  }
});

bot.onText(/\/contact/, (msg) => {
  const chatId = msg.chat.id;
  const messageId = msg.message_id;

  // –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  bot.deleteMessage(chatId, messageId).catch((err) => {
    console.error(`–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ: ${err.message}`);
  });

  // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–æ–Ω—Ç–∞–∫—Ç–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –∏ –∫–Ω–æ–ø–∫–æ–π –∑–∞–∫—Ä—ã—Ç–∏—è
  bot.sendMessage(
    chatId,
    `üìû –ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:\n\n` +
    `- –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è –±–æ—Ç–∞: @NeArtikYaYa\n` +
    `- –ì–ª–∞–≤–∞ –ù–∞–ª–æ–≥–æ–≤–æ–π: @Tovslo\n` +
    `- –ì–ª–∞–≤—ã –ü–°–ú: @suuuuuperrr123, @ozon_krutoy\n\n` +
    `–ú—ã —Ä–∞–¥—ã –≤–∞–º –ø–æ–º–æ—á—å!`,
    {
      reply_markup: {
        inline_keyboard: [
          [{ text: '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è –±–æ—Ç–∞', url: 'https://t.me/NeArtikYaYa' }],
          [{ text: '–ì–ª–∞–≤–∞ –ù–∞–ª–æ–≥–æ–≤–æ–π', url: 'https://t.me/Tovslo' }],
          [
            { text: '–ì–ª–∞–≤–∞ –ü–°–ú 1', url: 'https://t.me/suuuuuperrr123' },
          ],
          [{ text: '‚ùå –ó–∞–∫—Ä—ã—Ç—å', callback_data: 'close_contact' }],
        ],
      },
    }
  );
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ó–∞–∫—Ä—ã—Ç—å"
bot.on('callback_query', (callbackQuery) => {
  const chatId = callbackQuery.message.chat.id;
  const messageId = callbackQuery.message.message_id;

  if (callbackQuery.data === 'close_contact') {
    bot.deleteMessage(chatId, messageId).catch((err) => {
      console.error(`–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è: ${err.message}`);
    });
  }
});

bot.onText(/\/delete_fine (\d+)/, (msg, match) => {
  const chatId = msg.chat.id;
  const fineIndex = match[1];

  if (!taxWorkers.includes(chatId)) {
    bot.sendMessage(chatId, 'üõë –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º.');
    return;
  }

  if (fines[fineIndex]) {
    fines.splice(fineIndex, 1);
    saveData(finesFile, fines);
    bot.sendMessage(chatId, `‚úÖ –®—Ç—Ä–∞—Ñ ${fineIndex} —É–¥–∞–ª–µ–Ω.`);
  } else {
    bot.sendMessage(chatId, '‚ùå –®—Ç—Ä–∞—Ñ –Ω–µ –Ω–∞–π–¥–µ–Ω.');
  }
});


bot.onText(/\/worker_help/, (msg) => {
  const chatId = msg.chat.id;


  if (!msg.from || !users[chatId] || !users[chatId].role.includes('worker')) {
    bot.sendMessage(chatId, 'üõë –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ —Ä–∞–±–æ—Ç–Ω–∏–∫–∞–º –ù–∞–ª–æ–≥–æ–≤–æ–π.');
    return;
  }

  const helpMessage = `
  üîπ –ü—Ä–∏–≤–µ—Ç! –í–æ—Ç —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥ –¥–ª—è —Ä–∞–±–æ—Ç–Ω–∏–∫–æ–≤ –ù–∞–ª–æ–≥–æ–≤–æ–π –°–µ—Ä–≤–µ—Ä–∞ –ú–µ–¥ –∏ –∫–∞–∫ –∏–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è:

  1. /fine <ID> <–°—É–º–º–∞> <–ü—Ä–∏—á–∏–Ω–∞> - –í—ã–ø–∏—Å–∞—Ç—å —à—Ç—Ä–∞—Ñ. –í–ù–ò–ú–ê–ù–ò!!! ID —ç—Ç–æ —Ç–µ–≥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å –ø—Ä–æ–ø–∏—Å–∞–≤ /list.

  2. /list - –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö.

  3. /list_payments ‚Äî –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ –æ–ø–ª–∞—Ç—É –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.

  4. /report_fine ‚Äî –û—Ç—á–µ—Ç –ø–æ —à—Ç—Ä–∞—Ñ–∞–º –¥–ª—è –Ω–∞–ª–æ–≥–æ–≤–æ–π.

  5. /top_debtors - –¢–æ–ø –¥–æ–ª–∂–Ω–∏–∫–æ–≤.

  6. /notify_debtors - –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –¥–æ–ª–≥–∞—Ö –¥–æ–ª–∂–Ω–∏–∫–∞–º.

  7. /check_user_fines - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —à—Ç—Ä–∞—Ñ–∞—Ö –ª—é–¥–µ–π.

  –ö–æ–º–∞–Ω–¥—ã –¥–ª—è –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤:

  1. **/remove_worker <ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è>** ‚Äî –£–¥–∞–ª–∏—Ç—å –ø—Ä–∞–≤–∞ —Ä–∞–±–æ—Ç–Ω–∏–∫–∞ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.

  2. **/add_worker <ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è>** ‚Äî –î–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Å–ø–∏—Å–æ–∫ —Ä–∞–±–æ—Ç–Ω–∏–∫–æ–≤.
     - –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è –ø—Ä–∞–≤ —Ä–∞–±–æ—Ç–Ω–∏–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é. –ü—Ä–∏–º–µ—Ä: /add_worker 987654321.

  –ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã –∏–ª–∏ –Ω—É–∂–Ω–æ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ, –Ω–µ —Å—Ç–µ—Å–Ω—è–π—Ç–µ—Å—å –æ–±—Ä–∞—â–∞—Ç—å—Å—è!
  `;

  bot.sendMessage(chatId, helpMessage);
});

// –ü—Ä–æ–≤–µ—Ä–∫–∞, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–º –Ω–∞–ª–æ–≥–æ–≤–æ–π
function isWorker(chatId) {
  return users[chatId]?.role === 'worker'; // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ users.json
}


// –£–¥–∞–ª–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
function deleteActiveMessage(chatId) {
  if (activeMessages[chatId]) {
    bot.deleteMessage(chatId, activeMessages[chatId]).catch(() => {});
    delete activeMessages[chatId];
  }
}
// –ö–æ–º–∞–Ω–¥–∞ /notify_debtors ‚Äî —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–∏–∫–æ–≤
bot.onText(/\/notify_debtors/, (msg) => {
  const chatId = msg.chat.id;

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–º –Ω–∞–ª–æ–≥–æ–≤–æ–π
  if (!isTaxWorker(chatId)) {
    bot.sendMessage(chatId, 'üõë –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –Ω–∞–ª–æ–≥–æ–≤–æ–π.');
    return;
  }

  let notifiedCount = 0;

  for (const userId in fines) {
    const userFines = fines[userId] || [];
    const unpaidAmount = userFines
      .filter(fine => !fine.paid && !fine.cancelled)
      .reduce((sum, fine) => sum + fine.amount, 0);

    if (unpaidAmount > 0) {
      const username = users[userId]?.username || `ID: ${userId}`;
      bot.sendMessage(userId, `‚ö†Ô∏è –£ –≤–∞—Å –µ—Å—Ç—å –Ω–µ–æ–ø–ª–∞—á–µ–Ω–Ω—ã–µ —à—Ç—Ä–∞—Ñ—ã –Ω–∞ —Å—É–º–º—É ${unpaidAmount} –∞—Ä. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–≥–∞—Å–∏—Ç–µ –∑–∞–¥–æ–ª–∂–µ–Ω–Ω–æ—Å—Ç—å.`);
      notifiedCount++;
    }
  }

  bot.sendMessage(chatId, `‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã ${notifiedCount} –¥–æ–ª–∂–Ω–∏–∫–∞–º.`);
});

// –ö–æ–º–∞–Ω–¥–∞ /report_fine ‚Äî –æ—Ç—á–µ—Ç –ø–æ —à—Ç—Ä–∞—Ñ–∞–º
bot.onText(/\/report_fine/, (msg) => {
  const chatId = msg.chat.id;

  if (!isWorker(chatId)) {
    bot.sendMessage(chatId, 'üõë –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤.');
    return;
  }

  deleteActiveMessage(chatId); // –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –µ—Å–ª–∏ –æ–Ω–æ –µ—Å—Ç—å
  sendReportFine(chatId);

  // –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã
  bot.deleteMessage(chatId, msg.message_id).catch(() => {});
});

// –ö–æ–º–∞–Ω–¥–∞ /top_debtors ‚Äî —Ç–æ–ø –¥–æ–ª–∂–Ω–∏–∫–æ–≤
bot.onText(/\/top_debtors/, (msg) => {
  const chatId = msg.chat.id;

  if (!isWorker(chatId)) {
    bot.sendMessage(chatId, 'üõë –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤.');
    return;
  }

  deleteActiveMessage(chatId); // –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –µ—Å–ª–∏ –æ–Ω–æ –µ—Å—Ç—å
  sendTopDebtors(chatId);

  // –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã
  bot.deleteMessage(chatId, msg.message_id).catch(() => {});
});

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç—á–µ—Ç–∞ –ø–æ —à—Ç—Ä–∞—Ñ–∞–º
function sendReportFine(chatId) {
  let totalFines = 0;
  let totalPaid = 0;
  let totalCancelled = 0;
  let totalUnpaidAmount = 0;

  for (const userId in fines) {
    const userFines = fines[userId] || [];

    userFines.forEach((fine) => {
      totalFines++;
      if (fine.paid) {
        totalPaid++;
      } else if (fine.cancelled) {
        totalCancelled++;
      } else {
        totalUnpaidAmount += fine.amount;
      }
    });
  }

  const report = `üìä –û—Ç—á–µ—Ç –ø–æ —à—Ç—Ä–∞—Ñ–∞–º:\n\n` +
                 `- –í—Å–µ–≥–æ –≤—ã–ø–∏—Å–∞–Ω–æ —à—Ç—Ä–∞—Ñ–æ–≤: ${totalFines}\n` +
                 `- –û–ø–ª–∞—á–µ–Ω–æ —à—Ç—Ä–∞—Ñ–æ–≤: ${totalPaid}\n` +
                 `- –ê–Ω–Ω—É–ª–∏—Ä–æ–≤–∞–Ω–æ —à—Ç—Ä–∞—Ñ–æ–≤: ${totalCancelled}\n` +
                 `- –°—É–º–º–∞ –Ω–µ–æ–ø–ª–∞—á–µ–Ω–Ω—ã—Ö —à—Ç—Ä–∞—Ñ–æ–≤: ${totalUnpaidAmount} –∞—Ä\n`;

  bot.sendMessage(chatId, report, {
    reply_markup: {
      inline_keyboard: [
        [
          { text: 'üîç –¢–æ–ø –¥–æ–ª–∂–Ω–∏–∫–æ–≤', callback_data: 'view_top_debtors' },
          { text: '‚ùå –ó–∞–∫—Ä—ã—Ç—å –º–µ–Ω—é', callback_data: 'close_menu' },
        ],
      ],
    },
  }).then((sentMessage) => {
    activeMessages[chatId] = sentMessage.message_id; // –°–æ—Ö—Ä–∞–Ω—è–µ–º ID –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
  });
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–ø–∏—Å–∫–∞ —Ç–æ–ø –¥–æ–ª–∂–Ω–∏–∫–æ–≤
function sendTopDebtors(chatId) {
  const debtors = [];

  for (const userId in fines) {
    const userFines = fines[userId] || [];
    const unpaidAmount = userFines
      .filter(fine => !fine.paid && !fine.cancelled)
      .reduce((sum, fine) => sum + fine.amount, 0);

    if (unpaidAmount > 0) {
      debtors.push({ username: users[userId]?.username || `ID: ${userId}`, amount: unpaidAmount });
    }
  }

  debtors.sort((a, b) => b.amount - a.amount);

  const topDebtorsList = debtors.slice(0, 10).map((debtor, index) => {
    return `${index + 1}. ${debtor.username}: ${debtor.amount} –∞—Ä`;
  });

  const response = topDebtorsList.length > 0
    ? 'üìã –¢–æ–ø –¥–æ–ª–∂–Ω–∏–∫–æ–≤:\n\n' + topDebtorsList.join('\n')
    : '‚úÖ –í—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –æ–ø–ª–∞—Ç–∏–ª–∏ —Å–≤–æ–∏ —à—Ç—Ä–∞—Ñ—ã.';

  bot.sendMessage(chatId, response, {
    reply_markup: {
      inline_keyboard: [
        [
          { text: 'üìä –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ—Ç—á–µ—Ç', callback_data: 'view_report' },
          { text: '‚ùå –ó–∞–∫—Ä—ã—Ç—å –º–µ–Ω—é', callback_data: 'close_menu' },
        ],
      ],
    },
  }).then((sentMessage) => {
    activeMessages[chatId] = sentMessage.message_id; // –°–æ—Ö—Ä–∞–Ω—è–µ–º ID –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
  });
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ callback-–∑–∞–ø—Ä–æ—Å–æ–≤
bot.on('callback_query', (callbackQuery) => {
  const chatId = callbackQuery.message.chat.id;
  const data = callbackQuery.data;

  if (data === 'close_menu') {
    deleteActiveMessage(chatId); // –£–¥–∞–ª—è–µ–º —Ç–µ–∫—É—â–µ–µ –∞–∫—Ç–∏–≤–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
  } else if (data === 'view_report') {
    deleteActiveMessage(chatId); // –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ –∞–∫—Ç–∏–≤–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    sendReportFine(chatId);
  } else if (data === 'view_top_debtors') {
    deleteActiveMessage(chatId); // –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ –∞–∫—Ç–∏–≤–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    sendTopDebtors(chatId);
  }

  // –ó–∞–∫—Ä—ã–≤–∞–µ–º callback-–∑–∞–ø—Ä–æ—Å
  bot.answerCallbackQuery(callbackQuery.id);
});

// –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ä–∞–±–æ—Ç–Ω–∏–∫–∞ (–¥–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º)
bot.onText(/\/add_worker (\d+)/, (msg, match) => {
  const chatId = msg.chat.id;
  const userIdToAdd = match[1];

  // –ü—Ä–æ–≤–µ—Ä–∫–∞: –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä
  if (!taxWorkers.includes(chatId)) {
    // –ó–¥–µ—Å—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑
    bot.sendMessage(chatId, '‚ùå –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º.');
    return;
  }

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ —Å–∏—Å—Ç–µ–º–µ
  if (users[userIdToAdd]) {
    const user = users[userIdToAdd];
    if (user.role !== 'worker') {
      user.role = 'worker'; // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ä–æ–ª—å "worker"
      saveData(usersFile, users); // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è

      bot.sendMessage(chatId, `‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${user.username} (ID: ${userIdToAdd}) —Ç–µ–ø–µ—Ä—å —è–≤–ª—è–µ—Ç—Å—è —Ä–∞–±–æ—Ç–Ω–∏–∫–æ–º.`);
      bot.sendMessage(userIdToAdd, `‚úÖ –í—ã –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ —Å–ø–∏—Å–æ–∫ —Ä–∞–±–æ—Ç–Ω–∏–∫–æ–≤. –í—Å–µ –∫–æ–º–∞–Ω–¥—ã –∫–æ—Ç–æ—Ä—ã–µ –≤–∞–º –¥–æ—Å—Ç—É–ø–Ω—ã: /worker_help`);
    } else {
      bot.sendMessage(chatId, `‚ö†Ô∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${user.username} (ID: ${userIdToAdd}) —É–∂–µ —è–≤–ª—è–µ—Ç—Å—è —Ä–∞–±–æ—Ç–Ω–∏–∫–æ–º.`);
    }
  } else {
    bot.sendMessage(chatId, '‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º ID –Ω–µ –Ω–∞–π–¥–µ–Ω.');
  }
});

// –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è —Å–Ω—è—Ç–∏—è –ø—Ä–∞–≤ —Ä–∞–±–æ—Ç–Ω–∏–∫–∞ (–¥–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º)
bot.onText(/\/remove_worker (\d+)/, (msg, match) => {
  const chatId = msg.chat.id;
  const userIdToRemove = match[1];

  // –ü—Ä–æ–≤–µ—Ä–∫–∞: –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä
  if (!taxWorkers.includes(chatId)) {
    // –ó–¥–µ—Å—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑
    bot.sendMessage(chatId, '‚ùå –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º.');
    return;
  }

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ —Å–∏—Å—Ç–µ–º–µ
  if (users[userIdToRemove]) {
    const user = users[userIdToRemove];
    if (user.role === 'worker') {
      user.role = 'user'; // –ú–µ–Ω—è–µ–º —Ä–æ–ª—å –Ω–∞ –æ–±—ã—á–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      saveData(usersFile, users); // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è

      bot.sendMessage(chatId, `‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${user.username} (ID: ${userIdToRemove}) —Ç–µ–ø–µ—Ä—å –±–æ–ª—å—à–µ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —Ä–∞–±–æ—Ç–Ω–∏–∫–æ–º.`);
      bot.sendMessage(userIdToRemove, `‚ùå –í–∞—à–∏ –ø—Ä–∞–≤–∞ —Ä–∞–±–æ—Ç–Ω–∏–∫–∞ –±—ã–ª–∏ —Å–Ω—è—Ç—ã.`);
    } else {
      bot.sendMessage(chatId, `‚ö†Ô∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${user.username} (ID: ${userIdToRemove}) –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —Ä–∞–±–æ—Ç–Ω–∏–∫–æ–º.`);
    }
  } else {
    bot.sendMessage(chatId, '‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º ID –Ω–µ –Ω–∞–π–¥–µ–Ω.');
  }
});



// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –∏–∑ —Ñ–∞–π–ª–∞
function loadUsers() {
  if (fs.existsSync(usersFile)) {
    const data = fs.readFileSync(usersFile, 'utf-8');
    return JSON.parse(data);
  } else {
    return { authorizedUsers: [], employees: [] }; // –ï—Å–ª–∏ —Ñ–∞–π–ª –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
  }
}




bot.onText(/\/register (.+)/, (msg, match) => {
  const chatId = msg.chat.id;
  const username = match[1];

  if (users[chatId]) {
    bot.sendMessage(chatId, '‚úÖ –í—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã!');
  } else {

    if (!username.startsWith('@')) {
      bot.sendMessage(chatId, 'üõë –ù–∏–∫–Ω–µ–π–º –¥–æ–ª–∂–µ–Ω –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å —Å–∏–º–≤–æ–ª–∞ "@". –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –¥—Ä—É–≥–æ–π –Ω–∏–∫–Ω–µ–π–º.');
      return;
    }


    const isUsernameTaken = Object.values(users).some(user => user.username.toLowerCase() === username.toLowerCase());
    if (isUsernameTaken) {
      bot.sendMessage(chatId, `üõë –ò–º—è "${username}" —É–∂–µ –∑–∞–Ω—è—Ç–æ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –¥—Ä—É–≥–æ–µ –∏–º—è.`);
      return;
    }

    users[chatId] = { username, balance: 0 };
    saveData(usersFile, users);
    bot.sendMessage(chatId, `‚úÖ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, ${username}. –°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥: /help`);
  }
});


// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –∏–∑ —Ñ–∞–π–ª–∞
function loadUsers() {
  if (fs.existsSync(usersFile)) {
    const data = fs.readFileSync(usersFile, 'utf-8');
    return JSON.parse(data);
  } else {
    return {};
  }
}


// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –∏–∑ —Ñ–∞–π–ª–∞
function loadUsers() {
  if (fs.existsSync(usersFile)) {
    const data = fs.readFileSync(usersFile, 'utf-8');
    return JSON.parse(data);
  } else {
    return {};
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –≤ —Ñ–∞–π–ª
function saveUsers(users) {
  fs.writeFileSync(usersFile, JSON.stringify(users, null, 2), 'utf-8');
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –∏–∑ —Ñ–∞–π–ª–∞
function loadUsers() {
  if (fs.existsSync(usersFile)) {
    const data = fs.readFileSync(usersFile, 'utf-8');
    return JSON.parse(data);
  } else {
    return {};
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –≤ —Ñ–∞–π–ª
function saveUsers(users) {
  fs.writeFileSync(usersFile, JSON.stringify(users, null, 2), 'utf-8');
}


// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, —á—Ç–æ–±—ã —É –∫–∞–∂–¥–æ–≥–æ –±—ã–ª–æ –ø–æ–ª–µ `role`
function ensureRoles(users) {
  for (const userId in users) {
    if (!users[userId].role) {
      users[userId].role = 'user'; // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –ø—Ä–∏—Å–≤–∞–∏–≤–∞–µ–º —Ä–æ–ª—å "user"
    }
  }
  saveUsers(users); // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
}

// –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ –≤—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –∏–º–µ—é—Ç –ø–æ–ª–µ `role`
ensureRoles(users);


bot.onText(/\/fine/, (msg) => {
  if (!isTaxWorker(msg.chat.id)) {
    bot.sendMessage(msg.chat.id, '‚ùå –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ —Ä–∞–±–æ—Ç–Ω–∏–∫–∞–º –Ω–∞–ª–æ–≥–æ–≤–æ–π.');
    return;
  }
  bot.sendMessage(msg.chat.id, 'üõë –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∫–æ–º–∞–Ω–¥—ã: /fine <–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å> <—Å—É–º–º–∞> <–ø—Ä–∏—á–∏–Ω–∞>\n–ü—Ä–∏–º–µ—Ä: /fine @username 100 –ù–∞—Ä—É—à–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª.');
});


bot.onText(/\/fine (@\w+) (\d+) (.+)/, (msg, match) => {
  const chatId = msg.chat.id;


  if (!isTaxWorker(chatId)) {
    bot.sendMessage(chatId, '');
    return;
  }

  const targetUsername = match[1];
  const amount = parseInt(match[2]);
  const reason = match[3];

  if (isNaN(amount) || amount <= 0) {
    bot.sendMessage(chatId, 'üõë –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Å—É–º–º—É —à—Ç—Ä–∞—Ñ–∞.');
    return;
  }


  const userId = Object.keys(users).find(id => users[id].username === targetUsername);

  if (!userId) {
    bot.sendMessage(chatId, `üõë –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å –∏–º–µ–Ω–µ–º ${targetUsername} –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∏–º—è –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.`);
    return;
  }


  if (!fines[userId]) fines[userId] = [];


  fines[userId].push({ amount, reason, date: new Date().toISOString(), paid: false });

  saveData(finesFile, fines);
  saveData(usersFile, users);

  bot.sendMessage(chatId, `üõë –®—Ç—Ä–∞—Ñ –¥–ª—è ${targetUsername} –Ω–∞ —Å—É–º–º—É ${amount}–∞—Ä —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω. –ü—Ä–∏—á–∏–Ω–∞: ${reason}`);
  bot.sendMessage(userId, `‚úÖ –í–∞–º –±—ã–ª –≤—ã–ø–∏—Å–∞–Ω —à—Ç—Ä–∞—Ñ –Ω–∞ —Å—É–º–º—É ${amount}–∞—Ä. –ü—Ä–∏—á–∏–Ω–∞: ${reason}. –¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å: ${users[userId].balance}`);
});


// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –∏–∑ —Ñ–∞–π–ª–∞
function loadUsers() {
  if (fs.existsSync(usersFile)) {
    const data = fs.readFileSync(usersFile, 'utf-8');
    return JSON.parse(data); // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ–±—ä–µ–∫—Ç
  } else {
    return {}; // –ï—Å–ª–∏ —Ñ–∞–π–ª–∞ –Ω–µ—Ç, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—É—Å—Ç–æ–π –æ–±—ä–µ–∫—Ç
  }
}


// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –∏–∑ —Ñ–∞–π–ª–∞
function loadUsers() {
  if (fs.existsSync(usersFile)) {
    const data = fs.readFileSync(usersFile, 'utf-8');
    return JSON.parse(data); // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ–±—ä–µ–∫—Ç
  } else {
    return {}; // –ï—Å–ª–∏ —Ñ–∞–π–ª–∞ –Ω–µ—Ç, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—É—Å—Ç–æ–π –æ–±—ä–µ–∫—Ç
  }
}




// –ü—É—Ç—å –∫ —Ñ–∞–π–ª–∞–º —Å –¥–∞–Ω–Ω—ã–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π


// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
function loadUsers() {
  if (fs.existsSync(usersFile)) {
    const data = fs.readFileSync(usersFile, 'utf-8');
    return JSON.parse(data); // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ–±—ä–µ–∫—Ç
  } else {
    return {}; // –ï—Å–ª–∏ —Ñ–∞–π–ª–∞ –Ω–µ—Ç, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—É—Å—Ç–æ–π –æ–±—ä–µ–∫—Ç
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
function saveUsers(users) {
  fs.writeFileSync(usersFile, JSON.stringify(users, null, 2), 'utf-8');
}

// –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π


// –ö–æ–º–∞–Ω–¥–∞ /list - —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –∏—Ö —Ä–æ–ª—è–º–∏
bot.on('message', (msg) => {
  const chatId = msg.chat.id;
  const userId = String(msg.from.id); // –ü—Ä–∏–≤–æ–¥–∏–º ID –∫ —Å—Ç—Ä–æ–∫–µ, —Ç–∞–∫ –∫–∞–∫ –∫–ª—é—á–∏ –≤ users —Ö—Ä–∞–Ω—è—Ç—Å—è –∫–∞–∫ —Å—Ç—Ä–æ–∫–∏
  const text = msg.text;

  if (text === '/list') {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ —Å–ø–∏—Å–∫–µ –∏ —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –æ–Ω —Ä–∞–±–æ—Ç–Ω–∏–∫–æ–º
    if (users[userId] && (users[userId].role === 'worker' || users[userId].role === 'admin')) {
      let response = "üìã **–°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:**\n";

      if (Object.keys(users).length > 0) {
        Object.entries(users).forEach(([id, userData]) => {
          const role = userData.role || 'user'; // –ï—Å–ª–∏ —Ä–æ–ª—å –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç, —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è 'user'
          response += `- ${userData.username} (ID: ${id}, –ë–∞–ª–∞–Ω—Å: ${userData.balance}, –†–æ–ª—å: ${role})\n`;
        });
      } else {
        response += "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö.";
      }

      bot.sendMessage(chatId, response, { parse_mode: 'Markdown' });
    } else {
      // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —Ä–∞–±–æ—Ç–Ω–∏–∫, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–∏
      bot.sendMessage(chatId, '‚ùå –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ —Ä–∞–±–æ—Ç–Ω–∏–∫–∞–º –Ω–∞–ª–æ–≥–æ–≤–æ–π.');
    }
  }
});





// –ö–æ–º–∞–Ω–¥–∞ /balance –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞
bot.onText(/\/balance/, (msg) => {
  const chatId = msg.chat.id;

  if (users[chatId]) {
    let balance = users[chatId].balance;
    const stacks = Math.floor(balance / 64); // –°—á–∏—Ç–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª–Ω—ã—Ö —Å—Ç–∞–∫–æ–≤
    const remainder = balance % 64; // –°—á–∏—Ç–∞–µ–º –æ—Å—Ç–∞—Ç–æ–∫

    // –°–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º —Å—Ç–∞–∫–æ–≤
    let stackMessage = `üì¶ –°—Ç–∞–∫–æ–≤: ${stacks}`;
    if (remainder > 0) {
      stackMessage += ` + 1 –Ω–µ–ø–æ–ª–Ω—ã–π —Å—Ç–∞–∫ (${remainder} –∞—Ä)`;
    }

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å —Ç–µ–∫—É—â–∏–º –±–∞–ª–∞–Ω—Å–æ–º
    bot.sendMessage(
      chatId,
      `‚úÖ –í–∞—à –±–∞–ª–∞–Ω—Å: ${balance} –∞—Ä\n${stackMessage}`,
      {
        reply_markup: {
          inline_keyboard: [
            [
              { text: 'üîÑ –û–±–Ω–æ–≤–∏—Ç—å –±–∞–ª–∞–Ω—Å', callback_data: 'refresh_balance' },
              { text: '‚ùå –ó–∞–∫—Ä—ã—Ç—å –º–µ–Ω—é', callback_data: 'close_menu' },
            ],
          ],
        },
      }
    );

    // –£–¥–∞–ª—è–µ–º –∫–æ–º–∞–Ω–¥—É /balance, —á—Ç–æ–±—ã –Ω–µ –±—ã–ª–æ –ª–∏—à–Ω–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
    bot.deleteMessage(chatId, msg.message_id);
  } else {
    bot.sendMessage(chatId, 'üõë –í—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /register <–∏–º—è> –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏.');
  }
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–æ–∫
bot.on('callback_query', (callbackQuery) => {
  const chatId = callbackQuery.message.chat.id;
  const data = callbackQuery.data;

  if (data === 'refresh_balance') {
    // –ü—Ä–∏–º–µ—Ä: –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞ –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—É–º–º—ã
    const balance = users[chatId].balance;
    const stacks = Math.floor(balance / 64); // –°—á–∏—Ç–∞–µ–º –ø–æ–ª–Ω—ã–µ —Å—Ç–∞–∫–∏
    const remainder = balance % 64; // –°—á–∏—Ç–∞–µ–º –æ—Å—Ç–∞—Ç–æ–∫

    let stackMessage = `üì¶ –°—Ç–∞–∫–æ–≤: ${stacks}`;
    if (remainder > 0) {
      stackMessage += ` + 1 –Ω–µ–ø–æ–ª–Ω—ã–π —Å—Ç–∞–∫ (${remainder} –∞—Ä)`;
    }

    // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –±–∞–ª–∞–Ω—Å–æ–º
    bot.editMessageText(
      `‚úÖ –í–∞—à –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –±–∞–ª–∞–Ω—Å: ${balance} –∞—Ä\n${stackMessage}`,
      {
        chat_id: chatId,
        message_id: callbackQuery.message.message_id,
        reply_markup: {
          inline_keyboard: [
            [
              { text: 'üîÑ –û–±–Ω–æ–≤–∏—Ç—å –±–∞–ª–∞–Ω—Å', callback_data: 'refresh_balance' },
              { text: '‚ùå –ó–∞–∫—Ä—ã—Ç—å –º–µ–Ω—é', callback_data: 'close_menu' },
            ],
          ],
        },
      }
    );
  } else if (data === 'close_menu') {
    // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–µ–Ω—é
    bot.deleteMessage(chatId, callbackQuery.message.message_id);
  }
});

// –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
loadUsers();

const interactionLogs = [];
bot.on('message', (msg) => {
  const logEntry = {
    timestamp: new Date().toISOString(),
    username: msg.from.username || '–ë–µ–∑ –∏–º–µ–Ω–∏',
    chatId: msg.chat.id,
    text: msg.text || '–ë–µ–∑ —Ç–µ–∫—Å—Ç–∞'
  };

  interactionLogs.push(logEntry);

  console.log(`[${logEntry.timestamp}] –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${logEntry.username}, ID —á–∞—Ç–∞: ${logEntry.chatId}, –°–æ–æ–±—â–µ–Ω–∏–µ: "${logEntry.text}"`);
});

function addFine(chatId, amount, reason) {
  if (!fines[chatId]) {
    fines[chatId] = [];
  }

  const fine = {
    amount,
    reason,
    paid: false,
    cancelled: false,
    createdAt: Date.now(),
    doubled: false, // –§–ª–∞–≥, —á—Ç–æ —à—Ç—Ä–∞—Ñ —É–∂–µ —É–¥–≤–æ–µ–Ω
    warned: false,  // –§–ª–∞–≥, —á—Ç–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –æ —Å—É–¥–µ —É–∂–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ
  };

  fines[chatId].push(fine);

  bot.sendMessage(chatId, `üö® –í–∞–º –≤—ã–ø–∏—Å–∞–Ω —à—Ç—Ä–∞—Ñ –Ω–∞ —Å—É–º–º—É ${amount} –∞—Ä –∑–∞: ${reason}.`);

  // –¢–∞–π–º–µ—Ä –¥–ª—è —É–¥–≤–æ–µ–Ω–∏—è —à—Ç—Ä–∞—Ñ–∞ —á–µ—Ä–µ–∑ –º–∏–Ω—É—Ç—É
  setTimeout(() => {
    if (!fine.paid && !fine.cancelled && !fine.doubled) {
      fine.amount *= 2; // –£–¥–≤–æ–µ–Ω–∏–µ —à—Ç—Ä–∞—Ñ–∞
      fine.doubled = true;

      bot.sendMessage(
        chatId,
        `‚ö†Ô∏è –í–∞—à —à—Ç—Ä–∞—Ñ —É–≤–µ–ª–∏—á–∏–ª—Å—è –≤ 2 —Ä–∞–∑–∞! –¢–µ–ø–µ—Ä—å –æ–Ω —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç ${fine.amount} –∞—Ä.`
      );
    }

    // –¢–∞–π–º–µ—Ä –¥–ª—è –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –æ —Å—É–¥–µ –µ—â–µ —á–µ—Ä–µ–∑ –º–∏–Ω—É—Ç—É
    setTimeout(() => {
      if (!fine.paid && !fine.cancelled && fine.doubled && !fine.warned) {
        fine.warned = true;

        bot.sendMessage(
          chatId,
          `‚ö†Ô∏è –í–∞—à —à—Ç—Ä–∞—Ñ –Ω–µ –±—ã–ª –æ–ø–ª–∞—á–µ–Ω –≤–æ–≤—Ä–µ–º—è. –ú—ã –ø–æ–¥–∞–µ–º –¥–µ–ª–æ –≤ —Å—É–¥.`
        );
      }
    }, 60 * 1000); // 1 –º–∏–Ω—É—Ç–∞
  }, 60 * 1000); // 1 –º–∏–Ω—É—Ç–∞
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —à—Ç—Ä–∞—Ñ–∞

// –ö–æ–º–∞–Ω–¥–∞ /archive
bot.onText(/\/archive/, (msg) => {
  const chatId = msg.chat.id;

  if (!users[chatId]) {
    bot.sendMessage(chatId, 'üõë –í—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /register <–∏–º—è> –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏.');
    return;
  }

  const userFines = fines[chatId] || [];
  const archiveList = userFines
    .filter((fine) => fine.paid || fine.cancelled)
    .map((fine, index) => {
      const status = fine.paid
        ? '–û–ø–ª–∞—á–µ–Ω'
        : fine.cancelled
        ? '–ê–Ω–Ω—É–ª–∏—Ä–æ–≤–∞–Ω'
        : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ';

      return `–®—Ç—Ä–∞—Ñ ${index + 1}:\n` +
             `- –°—É–º–º–∞: ${fine.amount} –∞—Ä\n` +
             `- –ü—Ä–∏—á–∏–Ω–∞: ${fine.reason || '–ù–µ —É–∫–∞–∑–∞–Ω–∞'}\n` +
             `- –°—Ç–∞—Ç—É—Å: ${status}\n` +
             `- –î–∞—Ç–∞: ${
               fine.paidAt ? new Date(fine.paidAt).toLocaleString() : '–ù–µ —É–∫–∞–∑–∞–Ω–∞'
             }\n\n`;
    });

  const response = archiveList.length > 0
    ? 'üìÇ –ê—Ä—Ö–∏–≤ —à—Ç—Ä–∞—Ñ–æ–≤:\n\n' + archiveList.join('')
    : 'üìÇ –£ –≤–∞—Å –Ω–µ—Ç –∞—Ä—Ö–∏–≤–Ω—ã—Ö —à—Ç—Ä–∞—Ñ–æ–≤.';

  bot.sendMessage(chatId, response, {
    reply_markup: {
      inline_keyboard: [
        [
          { text: '‚ùå –ó–∞–∫—Ä—ã—Ç—å –º–µ–Ω—é', callback_data: 'close_menu' },
          { text: 'üìã –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ç–µ–∫—É—â–∏–µ —à—Ç—Ä–∞—Ñ—ã', callback_data: 'view_current_fines' },
        ],
      ],
    },
  }).then((message) => {
    // –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    bot.deleteMessage(chatId, msg.message_id);
  });
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ –∫–Ω–æ–ø–∫–∏
bot.on('callback_query', (callbackQuery) => {
  const chatId = callbackQuery.message.chat.id;
  const data = callbackQuery.data;

  if (data === 'close_menu') {
    // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–µ–Ω—é
    bot.deleteMessage(chatId, callbackQuery.message.message_id);
  } else if (data === 'view_current_fines') {
    // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    bot.deleteMessage(chatId, callbackQuery.message.message_id);

    // –ü—Ä–æ—Å–º–æ—Ç—Ä —Ç–µ–∫—É—â–∏—Ö —à—Ç—Ä–∞—Ñ–æ–≤
    const userFines = fines[chatId] || [];
    const currentFines = userFines
      .filter(fine => !fine.paid && !fine.cancelled)
      .map((fine, index) => {
        return `–®—Ç—Ä–∞—Ñ ${index + 1}:\n` +
               `- –°—É–º–º–∞: ${fine.amount} –∞—Ä\n` +
               `- –ü—Ä–∏—á–∏–Ω–∞: ${fine.reason || '–ù–µ —É–∫–∞–∑–∞–Ω–∞'}\n` +
               `- –°—Ç–∞—Ç—É—Å: –ù–µ–æ–ø–ª–∞—á–µ–Ω–æ\n` +
               `- –î–∞—Ç–∞: ${new Date(fine.date).toLocaleString()}\n\n`;
      });

    const response = currentFines.length > 0
      ? 'üìã –¢–µ–∫—É—â–∏–µ —à—Ç—Ä–∞—Ñ—ã:\n\n' + currentFines.join('')
      : 'üìã –£ –≤–∞—Å –Ω–µ—Ç —Ç–µ–∫—É—â–∏—Ö —à—Ç—Ä–∞—Ñ–æ–≤.';

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –¥–ª—è —Ç–µ–∫—É—â–∏—Ö —à—Ç—Ä–∞—Ñ–æ–≤
    bot.sendMessage(chatId, response, {
      reply_markup: {
        inline_keyboard: [
          [
            { text: '‚ùå –ó–∞–∫—Ä—ã—Ç—å –º–µ–Ω—é', callback_data: 'close_menu' },
            { text: 'üìÇ –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∞—Ä—Ö–∏–≤ —à—Ç—Ä–∞—Ñ–æ–≤', callback_data: 'archive' },
          ],
        ],
      },
    });
  } else if (data === 'archive') {
    // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    bot.deleteMessage(chatId, callbackQuery.message.message_id);

    // –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –ø—Ä–æ—Å–º–æ—Ç—Ä—É –∞—Ä—Ö–∏–≤–∞
    const userFines = fines[chatId] || [];
    const archiveList = userFines
      .filter((fine) => fine.paid || fine.cancelled)
      .map((fine, index) => {
        const status = fine.paid
          ? '–û–ø–ª–∞—á–µ–Ω'
          : fine.cancelled
          ? '–ê–Ω–Ω—É–ª–∏—Ä–æ–≤–∞–Ω'
          : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ';

        return `–®—Ç—Ä–∞—Ñ ${index + 1}:\n` +
               `- –°—É–º–º–∞: ${fine.amount} –∞—Ä\n` +
               `- –ü—Ä–∏—á–∏–Ω–∞: ${fine.reason || '–ù–µ —É–∫–∞–∑–∞–Ω–∞'}\n` +
               `- –°—Ç–∞—Ç—É—Å: ${status}\n` +
               `- –î–∞—Ç–∞: ${
                 fine.paidAt ? new Date(fine.paidAt).toLocaleString() : '–ù–µ —É–∫–∞–∑–∞–Ω–∞'
               }\n\n`;
      });

    const response = archiveList.length > 0
      ? 'üìÇ –ê—Ä—Ö–∏–≤ —à—Ç—Ä–∞—Ñ–æ–≤:\n\n' + archiveList.join('')
      : 'üìÇ –£ –≤–∞—Å –Ω–µ—Ç –∞—Ä—Ö–∏–≤–Ω—ã—Ö —à—Ç—Ä–∞—Ñ–æ–≤.';

    bot.sendMessage(chatId, response, {
      reply_markup: {
        inline_keyboard: [
          [
            { text: '‚ùå –ó–∞–∫—Ä—ã—Ç—å –º–µ–Ω—é', callback_data: 'close_menu' },
            { text: 'üìã –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ç–µ–∫—É—â–∏–µ —à—Ç—Ä–∞—Ñ—ã', callback_data: 'view_current_fines' },
          ],
        ],
      },
    });
  } else if (data === 'check_fines') {
    // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    bot.deleteMessage(chatId, callbackQuery.message.message_id);

    // –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —à—Ç—Ä–∞—Ñ—ã —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º —Å–ø–∏—Å–∞–Ω–∏–µ–º
    autoPayFines(chatId);

    const userFines = fines[chatId] || [];
    const unpaidFines = userFines.filter((fine) => !fine.paid && !fine.cancelled);

    if (unpaidFines.length > 0) {
      const fineList = unpaidFines.map((fine, index) => {
        return `–®—Ç—Ä–∞—Ñ ${index + 1}:\n` +
               `- –°—É–º–º–∞: ${fine.amount} –∞—Ä\n` +
               `- –ü—Ä–∏—á–∏–Ω–∞: ${fine.reason || '–ù–µ —É–∫–∞–∑–∞–Ω–∞'}\n` +
               `- –î–∞—Ç–∞: ${new Date(fine.date).toLocaleString()}\n`;
      }).join('\n');

      bot.sendMessage(chatId, `üõë –£ –≤–∞—Å –µ—Å—Ç—å –Ω–µ–æ–ø–ª–∞—á–µ–Ω–Ω—ã–µ —à—Ç—Ä–∞—Ñ—ã:\n\n${fineList}`, {
        reply_markup: {
          inline_keyboard: [
            [
              { text: '‚ùå –ó–∞–∫—Ä—ã—Ç—å –º–µ–Ω—é', callback_data: 'close_menu' },
              { text: 'üìÇ –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∞—Ä—Ö–∏–≤ —à—Ç—Ä–∞—Ñ–æ–≤', callback_data: 'archive' },
            ],
          ],
        },
      });
    } else {
      bot.sendMessage(chatId, '‚úÖ –£ –≤–∞—Å –Ω–µ—Ç –Ω–µ–æ–ø–ª–∞—á–µ–Ω–Ω—ã—Ö —à—Ç—Ä–∞—Ñ–æ–≤.', {
        reply_markup: {
          inline_keyboard: [
            [
              { text: '‚ùå –ó–∞–∫—Ä—ã—Ç—å –º–µ–Ω—é', callback_data: 'close_menu' },
              { text: 'üìÇ –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∞—Ä—Ö–∏–≤ —à—Ç—Ä–∞—Ñ–æ–≤', callback_data: 'archive' },
            ],
          ],
        },
      });
    }
  }
});


// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –æ–ø–ª–∞—Ç—ã —à—Ç—Ä–∞—Ñ–æ–≤
function autoPayFines(userId) {
  const user = users[userId];
  const userFines = fines[userId] || [];

  if (!user || !userFines.length) return;

  userFines.forEach((fine) => {
    if (!fine.paid && !fine.cancelled && user.balance >= fine.amount) {
      user.balance -= fine.amount; // –°–ø–∏—Å—ã–≤–∞–µ–º —Å—É–º–º—É —à—Ç—Ä–∞—Ñ–∞ —Å –±–∞–ª–∞–Ω—Å–∞
      fine.paid = true; // –û—Ç–º–µ—á–∞–µ–º —à—Ç—Ä–∞—Ñ –∫–∞–∫ –æ–ø–ª–∞—á–µ–Ω–Ω—ã–π
      fine.paidAt = new Date().toISOString(); // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –¥–∞—Ç—É –æ–ø–ª–∞—Ç—ã
    }
  });

  // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
  saveData(usersFile, users);
  saveData(finesFile, fines);
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è
function safeDeleteMessage(chatId, messageId) {
  if (!chatId || !messageId) return; // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–¥–∞–Ω—ã
  bot.deleteMessage(chatId, messageId).catch((err) => {
    if (err.response && err.response.body && err.response.body.description) {
      console.warn(
        `–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ ${messageId} –≤ —á–∞—Ç–µ ${chatId}: ${err.response.body.description}`
      );
    } else {
      console.error(`–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ ${messageId} –≤ —á–∞—Ç–µ ${chatId}:`, err);
    }
  });
}

// –ö–æ–º–∞–Ω–¥–∞ /check_fines —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –æ–ø–ª–∞—Ç–æ–π
bot.onText(/\/check_fines/, (msg) => {
  const chatId = msg.chat.id;

  if (!users[chatId]) {
    bot.sendMessage(chatId, 'üõë –í—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /register <–∏–º—è> –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏.');
    return;
  }

  // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –æ–ø–ª–∞—Ç–∞ —à—Ç—Ä–∞—Ñ–æ–≤
  autoPayFines(chatId);

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–ø–∏—Å–æ–∫ —à—Ç—Ä–∞—Ñ–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  const userFines = fines[chatId] || [];
  const unpaidFines = userFines.filter((fine) => !fine.paid && !fine.cancelled);

  let response;
  if (unpaidFines.length > 0) {
    const fineList = unpaidFines.map((fine, index) => {
      return `–®—Ç—Ä–∞—Ñ ${index + 1}:\n` +
             `- –°—É–º–º–∞: ${fine.amount} –∞—Ä\n` +
             `- –ü—Ä–∏—á–∏–Ω–∞: ${fine.reason || '–ù–µ —É–∫–∞–∑–∞–Ω–∞'}\n` +
             `- –î–∞—Ç–∞: ${new Date(fine.date).toLocaleString()}\n`;
    }).join('\n');

    response = `üõë –£ –≤–∞—Å –µ—Å—Ç—å –Ω–µ–æ–ø–ª–∞—á–µ–Ω–Ω—ã–µ —à—Ç—Ä–∞—Ñ—ã:\n\n${fineList}`;
  } else {
    response = '‚úÖ –£ –≤–∞—Å –Ω–µ—Ç –Ω–µ–æ–ø–ª–∞—á–µ–Ω–Ω—ã—Ö —à—Ç—Ä–∞—Ñ–æ–≤.';
  }

  // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏
  bot.sendMessage(chatId, response, {
    reply_markup: {
      inline_keyboard: [
        [
          { text: '‚ùå –ó–∞–∫—Ä—ã—Ç—å –º–µ–Ω—é', callback_data: 'close_menu' },
          { text: 'üìÇ –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∞—Ä—Ö–∏–≤ —à—Ç—Ä–∞—Ñ–æ–≤', callback_data: 'archive' },
        ],
      ],
    },
  }).then((message) => {
    // –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–æ–º–∞–Ω–¥–æ–π
    safeDeleteMessage(chatId, msg.message_id);
  });
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ –∫–Ω–æ–ø–∫–∏
bot.on('callback_query', (callbackQuery) => {
  const chatId = callbackQuery.message.chat.id;
  const data = callbackQuery.data;

  if (data === 'close_menu') {
    // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–µ–Ω—é
    safeDeleteMessage(chatId, callbackQuery.message.message_id);
  } else if (data === 'archive') {
    // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    safeDeleteMessage(chatId, callbackQuery.message.message_id);


  }
});


// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä—É—á–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏ —à—Ç—Ä–∞—Ñ–æ–≤ (–µ—Å–ª–∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫ –Ω–∞–ª–æ–≥–æ–≤–æ–π —Ö–æ—á–µ—Ç –ø—Ä–æ–≤–µ—Ä–∏—Ç—å)
bot.onText(/\/check_user_fines/, (msg) => {
  const chatId = msg.chat.id;

  if (!isWorker(chatId)) {
    bot.sendMessage(chatId, 'üõë –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –Ω–∞–ª–æ–≥–æ–≤–æ–π.');
    return;
  }

  const commandParts = msg.text.split(' ');
  const username = commandParts[1];

  if (!username) {
    bot.sendMessage(chatId, 'üõë –£–∫–∞–∂–∏—Ç–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –ü—Ä–∏–º–µ—Ä: /check_user_fines @username');
    return;
  }

  const targetUserId = Object.keys(users).find((id) => users[id]?.username === username);

  if (!targetUserId) {
    bot.sendMessage(chatId, `üõë –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å –∏–º–µ–Ω–µ–º ${username} –Ω–µ –Ω–∞–π–¥–µ–Ω.`);
    return;
  }

  autoPayFines(targetUserId); // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –æ–ø–ª–∞—Ç–∞ —à—Ç—Ä–∞—Ñ–æ–≤ –¥–ª—è —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

  const userFines = fines[targetUserId] || [];
  const unpaidFines = userFines.filter((fine) => !fine.paid && !fine.cancelled);

  if (unpaidFines.length > 0) {
    const fineList = unpaidFines.map((fine, index) => {
      return `–®—Ç—Ä–∞—Ñ ${index + 1}:\n` +
             `- –°—É–º–º–∞: ${fine.amount} –∞—Ä\n` +
             `- –ü—Ä–∏—á–∏–Ω–∞: ${fine.reason || '–ù–µ —É–∫–∞–∑–∞–Ω–∞'}\n` +
             `- –î–∞—Ç–∞: ${new Date(fine.date).toLocaleString()}\n`;
    }).join('\n');

    bot.sendMessage(chatId, `üõë –£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${username} –µ—Å—Ç—å –Ω–µ–æ–ø–ª–∞—á–µ–Ω–Ω—ã–µ —à—Ç—Ä–∞—Ñ—ã:\n\n${fineList}`);
  } else {
    bot.sendMessage(chatId, `‚úÖ –£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${username} –Ω–µ—Ç –Ω–µ–æ–ø–ª–∞—á–µ–Ω–Ω—ã—Ö —à—Ç—Ä–∞—Ñ–æ–≤.`);
  }
});


// –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞—è–≤–∫–∏ –Ω–∞ –æ–ø–ª–∞—Ç—É —Å –≤–æ–∑–º–æ–∂–Ω–æ–π –ø—Ä–∏—á–∏–Ω–æ–π

// –ö–æ–º–∞–Ω–¥–∞ /cancel_fine –¥–ª—è –∞–Ω–Ω—É–ª–∏—Ä–æ–≤–∞–Ω–∏—è —à—Ç—Ä–∞—Ñ–∞ (—Ç–æ–ª—å–∫–æ –¥–ª—è —Ä–∞–±–æ—Ç–Ω–∏–∫–æ–≤ –Ω–∞–ª–æ–≥–æ–≤–æ–π)
bot.onText(/\/cancel_fine (\d+)/, (msg, match) => {
  const chatId = msg.chat.id;
  const fineIndex = parseInt(match[1]);

  // –ü—Ä–æ–≤–µ—Ä–∫–∞, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ä–∞–±–æ—Ç–Ω–∏–∫–æ–º –Ω–∞–ª–æ–≥–æ–≤–æ–π
  if (!isTaxWorker(chatId)) {
    bot.sendMessage(chatId, 'üõë –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ —Ä–∞–±–æ—Ç–Ω–∏–∫–∞–º –Ω–∞–ª–æ–≥–æ–≤–æ–π.');
    return;
  }

  // –ù–∞—Ö–æ–¥–∏–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ –∏–Ω–¥–µ–∫—Å—É —à—Ç—Ä–∞—Ñ–∞
  let targetUserId;
  for (const userId in fines) {
    if (fines[userId][fineIndex]) {
      targetUserId = userId;
      break;
    }
  }

  if (!targetUserId || !fines[targetUserId] || !fines[targetUserId][fineIndex]) {
    bot.sendMessage(chatId, 'üõë –®—Ç—Ä–∞—Ñ —Å —Ç–∞–∫–∏–º –∏–Ω–¥–µ–∫—Å–æ–º –Ω–µ –Ω–∞–π–¥–µ–Ω.');
    return;
  }

  const fine = fines[targetUserId][fineIndex];

  // –ü—Ä–æ–≤–µ—Ä–∫–∞, –Ω–µ –±—ã–ª –ª–∏ —É–∂–µ –æ—Ç–º–µ–Ω—ë–Ω —à—Ç—Ä–∞—Ñ
  if (fine.cancelled) {
    bot.sendMessage(chatId, `üõë –≠—Ç–æ—Ç —à—Ç—Ä–∞—Ñ —É–∂–µ –±—ã–ª –æ—Ç–º–µ–Ω—ë–Ω.`);
    return;
  }

  // –ê–Ω–Ω—É–ª–∏—Ä–æ–≤–∞–Ω–∏–µ —à—Ç—Ä–∞—Ñ–∞
  fine.cancelled = true;

  // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Å—É–º–º—É —à—Ç—Ä–∞—Ñ–∞ –Ω–∞ –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  users[targetUserId].–∑–∞—è–≤–æ–∫ += fine.amount;

  // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ —Ñ–∞–π–ª–∞—Ö
  saveData(finesFile, fines);
  saveData(usersFile, users);

  // –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–Ω–∏–∫–æ–≤ –Ω–∞–ª–æ–≥–æ–≤–æ–π –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  bot.sendMessage(chatId, `üõë –®—Ç—Ä–∞—Ñ –¥–ª—è ${users[targetUserId].username} –Ω–∞ —Å—É–º–º—É ${fine.amount} –±—ã–ª —É—Å–ø–µ—à–Ω–æ –∞–Ω–Ω—É–ª–∏—Ä–æ–≤–∞–Ω.`);
  bot.sendMessage(targetUserId, `‚úÖ –í–∞—à —à—Ç—Ä–∞—Ñ –Ω–∞ —Å—É–º–º—É ${fine.amount} –±—ã–ª –∞–Ω–Ω—É–ª–∏—Ä–æ–≤–∞–Ω. –í–∞—à –Ω–æ–≤—ã–π –±–∞–ª–∞–Ω—Å: ${users[targetUserId].balance}`);
});
// –ü–æ–¥—Å–∫–∞–∑–∫–∞ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è /cancel_fine (–µ—Å–ª–∏ –∫–æ–º–∞–Ω–¥–∞ –±—ã–ª–∞ –Ω–∞–ø–∏—Å–∞–Ω–∞ –Ω–µ–≤–µ—Ä–Ω–æ)
bot.onText(/\/cancel_fine/, (msg) => {
  const chatId = msg.chat.id;

  if (!isTaxWorker(chatId)) {
    bot.sendMessage(chatId, 'üõë –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ —Ä–∞–±–æ—Ç–Ω–∏–∫–∞–º –Ω–∞–ª–æ–≥–æ–≤–æ–π.');
    return;
  }

  bot.sendMessage(chatId, 'üõë –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É –≤ —Å–ª–µ–¥—É—é—â–µ–º —Ñ–æ—Ä–º–∞—Ç–µ: /cancel_fine <–∏–Ω–¥–µ–∫—Å —à—Ç—Ä–∞—Ñ–∞>\n–ü—Ä–∏–º–µ—Ä: /cancel_fine 2\n–ö–æ–º–∞–Ω–¥–∞ –æ—Ç–º–µ–Ω–∏—Ç —à—Ç—Ä–∞—Ñ —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º –∏–Ω–¥–µ–∫—Å–æ–º.');
});
// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —Ä–∞–±–æ—Ç–Ω–∏–∫–æ–≤ –Ω–∞–ª–æ–≥–æ–≤–æ–π –æ –Ω–æ–≤–æ–π –∑–∞—è–≤–∫–µ
function notifyTaxWorkers(paymentRequest) {
  taxWorkers.forEach(workerId => {
    bot.sendMessage(workerId, `üõë –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ –æ–ø–ª–∞—Ç—É:\n\n–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${paymentRequest.username}\n–°—É–º–º–∞: ${paymentRequest.amount}–∞—Ä\n–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: ${paymentRequest.comment}\n–î–∞—Ç–∞: ${paymentRequest.date}\n\n–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –µ—ë –∫–æ–º–∞–Ω–¥–æ–π /list_payments`);
  });
}


// –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É payments.json
const paymentsFile = './payments.json';

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –∏–∑ JSON —Ñ–∞–π–ª–∞
function loadData(filePath) {
  if (fs.existsSync(filePath)) {
    return JSON.parse(fs.readFileSync(filePath, 'utf8'));
  }
  return [];
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –≤ JSON —Ñ–∞–π–ª
function saveData(filePath, data) {
  fs.writeFileSync(filePath, JSON.stringify(data, null, 2));
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–∞—Å—Å–∏–≤–∞ payments
let payments = loadData(paymentsFile);

// –ö–æ–º–∞–Ω–¥–∞ /pay
bot.onText(/\/pay (\d+)(?: (.+))?/, (msg, match) => {
  const chatId = msg.chat.id;
  const amount = parseInt(match[1]);
  const comment = match[2] || '–û–ø–ª–∞—Ç–∞ —à—Ç—Ä–∞—Ñ–∞';

  if (isNaN(amount) || amount <= 0) {
    bot.sendMessage(chatId, 'üõë –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Å—É–º–º—É –¥–ª—è –æ–ø–ª–∞—Ç—ã.');
    return;
  }

  if (!users[chatId]) {
    bot.sendMessage(chatId, 'üõë –í—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /register <–∏–º—è> –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏.');
    return;
  }

  // –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞—è–≤–∫–∏ –Ω–∞ –æ–ø–ª–∞—Ç—É
  const paymentRequest = {
    userId: chatId,
    username: users[chatId].username,
    amount,
    comment,
    date: new Date().toISOString(),
    status: 'pending',
  };

  payments.push(paymentRequest);
  saveData(paymentsFile, payments);

  bot.sendMessage(chatId, `‚úÖ –ó–∞—è–≤–∫–∞ –Ω–∞ –æ–ø–ª–∞—Ç—É –Ω–∞ —Å—É–º–º—É ${amount} —Å–æ–∑–¥–∞–Ω–∞. –û–∂–∏–¥–∞–π—Ç–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è.`);
  notifyTaxWorkers(paymentRequest);
});

// –ö–æ–º–∞–Ω–¥–∞ /list_payments
bot.onText(/\/list_payments/, (msg) => {
  const chatId = msg.chat.id;

  if (!isTaxWorker(chatId)) {
    bot.sendMessage(chatId, 'üõë –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ —Ä–∞–±–æ—Ç–Ω–∏–∫–∞–º –Ω–∞–ª–æ–≥–æ–≤–æ–π.');
    return;
  }

  let paymentsList = 'üìã –°–ø–∏—Å–æ–∫ –∑–∞—è–≤–æ–∫ –Ω–∞ –æ–ø–ª–∞—Ç—É:\n\n';
  const buttons = [];
  let foundPayments = false;

  payments.forEach((payment, index) => {
    if (payment.status === 'pending') {
      foundPayments = true;
      paymentsList += `–ó–∞—è–≤–∫–∞ ‚Ññ${index}\n` +
        `- –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${payment.username}\n` +
        `- –°—É–º–º–∞: ${payment.amount} –∞—Ä\n` +
        `- –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: ${payment.comment || '–ù–µ—Ç'}\n` +
        `- –î–∞—Ç–∞: ${payment.date}\n\n`;

      buttons.push([{
        text: `–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –æ–ø–ª–∞—Ç—É ‚Ññ${index}`,
        callback_data: `approve_payment_${index}`,
      }]);
    }
  });

  if (!foundPayments) {
    bot.sendMessage(chatId, '‚úÖ –ù–µ—Ç –æ–∂–∏–¥–∞—é—â–∏—Ö –∑–∞—è–≤–æ–∫ –Ω–∞ –æ–ø–ª–∞—Ç—É.');
    return;
  }

  bot.sendMessage(chatId, paymentsList, {
    reply_markup: {
      inline_keyboard: buttons,
    },
  });
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏–π –∫–Ω–æ–ø–æ–∫
bot.on('callback_query', (query) => {
  const chatId = query.message.chat.id;
  const data = query.data;

  if (data.startsWith('approve_payment_')) {
    const paymentIndex = parseInt(data.split('_')[2]);

    if (isNaN(paymentIndex) || !payments[paymentIndex]) {
      bot.answerCallbackQuery(query.id, { text: '‚ùå –ó–∞—è–≤–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.' });
      return;
    }

    const payment = payments[paymentIndex];

    if (payment.status !== 'pending') {
      bot.answerCallbackQuery(query.id, { text: 'üõë –≠—Ç–∞ –∑–∞—è–≤–∫–∞ —É–∂–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞.' });
      return;
    }

    // –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º –æ–ø–ª–∞—Ç—É –∏ –æ–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ
    users[payment.userId].balance += payment.amount;
    payment.status = 'approved';

    saveData(paymentsFile, payments);
    saveData(usersFile, users);

    bot.answerCallbackQuery(query.id, { text: `‚úÖ –û–ø–ª–∞—Ç–∞ –Ω–∞ —Å—É–º–º—É ${payment.amount} –∞—Ä –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞.` });
    bot.sendMessage(chatId, `‚úÖ –û–ø–ª–∞—Ç–∞ –Ω–∞ —Å—É–º–º—É ${payment.amount} –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${payment.username} –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞.`);
    bot.sendMessage(payment.userId, `‚úÖ –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ –æ–ø–ª–∞—Ç—É –Ω–∞ —Å—É–º–º—É ${payment.amount} –±—ã–ª–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞!`);
  }
});



// –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –Ω–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö –∑–∞—è–≤–æ–∫ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
bot.onText(/\/list_pending/, (msg) => {
  const chatId = msg.chat.id;

  const pendingDeliveries = deliveries.filter((d) => d.status === 'pending');

  if (pendingDeliveries.length === 0) {
    bot.sendMessage(chatId, '‚úÖ –í—Å–µ –∑–∞—è–≤–∫–∏ –æ–±—Ä–∞–±–æ—Ç–∞–Ω—ã.');
    return;
  }

  pendingDeliveries.forEach((delivery) => {
    bot.sendMessage(
      chatId,
      `üì¶ *–ó–∞—è–≤–∫–∞ ‚Ññ${delivery.id}:*\n\n` +
        `- –ù–∏–∫–Ω–µ–π–º: ${delivery.nickname}\n` +
        `- –¢–æ–≤–∞—Ä—ã: ${delivery.items}\n` +
        `- –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã: ${delivery.coordinates}\n` +
        `- –î–∞—Ç–∞: ${delivery.date}\n`,
      {
        parse_mode: 'Markdown',
        reply_markup: {
          inline_keyboard: [
            [
              { text: `‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∑–∞—è–≤–∫—É ‚Ññ${delivery.id}`, callback_data: `confirm_delivery_${delivery.id}` }
            ]
          ]
        }
      }
    );
  });

  // –ö–Ω–æ–ø–∫–∞ –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è –º–µ–Ω—é
  bot.sendMessage(chatId, 'üìã –í—Å–µ –∑–∞—è–≤–∫–∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω—ã.', {
    reply_markup: {
      inline_keyboard: [[{ text: '–ó–∞–∫—Ä—ã—Ç—å –º–µ–Ω—é', callback_data: 'close_menu' }]]
    }
  });
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ –∫–Ω–æ–ø–∫–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∑–∞—è–≤–∫–∏
bot.on('callback_query', (query) => {
  const data = query.data;

  if (data.startsWith('confirm_delivery_')) {
    const deliveryId = parseInt(data.split('_')[2]);
    const delivery = deliveries.find((d) => d.id === deliveryId);

    if (delivery && delivery.status === 'pending') {
      delivery.status = 'completed';
      saveDeliveries();

      bot.answerCallbackQuery(query.id, { text: '‚úÖ –ó–∞—è–≤–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞.' });

      // –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ —á–∞—Ç
      bot.sendMessage(
        deliveryChatId,
        `‚úÖ –ó–∞—è–≤–∫–∞ ‚Ññ${delivery.id} —É—Å–ø–µ—à–Ω–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞!\n–î–æ—Å—Ç–∞–≤–∫–∞ –¥–ª—è –∏–≥—Ä–æ–∫–∞ ${delivery.nickname} –∑–∞–≤–µ—Ä—à–µ–Ω–∞.`
      );

      // –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∏–≥—Ä–æ–∫—É
      bot.sendMessage(
        query.message.chat.id,
        `üéâ –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ –¥–æ—Å—Ç–∞–≤–∫—É –±—ã–ª–∞ —É—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞!`
      );
    } else {
      bot.answerCallbackQuery(query.id, { text: '‚ùå –ó–∞—è–≤–∫–∞ —É–∂–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞ –∏–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.' });
    }
  } else if (data === 'close_menu') {
    // –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –º–µ–Ω—é
    bot.deleteMessage(query.message.chat.id, query.message.message_id);
    bot.sendMessage(query.message.chat.id, '–ú–µ–Ω—é –∑–∞–∫—Ä—ã—Ç–æ.');
  }
});


const deliveriesFile = 'deliveries.json';

// –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ –¥–æ—Å—Ç–∞–≤–∫–∞—Ö –∏–∑ —Ñ–∞–π–ª–∞
let deliveries = [];
if (fs.existsSync(deliveriesFile)) {
  deliveries = JSON.parse(fs.readFileSync(deliveriesFile, 'utf8'));
}

// –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ —Ñ–∞–π–ª
function saveDeliveries() {
  fs.writeFileSync(deliveriesFile, JSON.stringify(deliveries, null, 2));
}

// –•—Ä–∞–Ω–∏–ª–∏—â–µ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –ø–æ–ø—ã—Ç–æ–∫ —Å –æ—à–∏–±–∫–∞–º–∏
const deliveryAttempts = {};



// –†–µ–≥—É–ª—è—Ä–Ω–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ñ–æ—Ä–º–∞—Ç–∞ –∑–∞—è–≤–∫–∏ –Ω–∞ –¥–æ—Å—Ç–∞–≤–∫—É
const deliveryFormatRegex =
  /–ù–∏–∫–Ω–µ–π–º:\s*(.+)\n–¢–æ–≤–∞—Ä—ã:\s*(.+)\n–ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã:\s*(.+)\n–î–∞—Ç–∞ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –¥–æ—Å—Ç–∞–≤–∫–∏:\s*(\d{2}\/\d{2}\/\d{4})/;

// –ö–æ–º–∞–Ω–¥–∞ /–æ—Ñ–æ—Ä–º–∏—Ç—å_–¥–æ—Å—Ç–∞–≤–∫—É
bot.onText(/\/–æ—Ñ–æ—Ä–º–∏—Ç—å_–¥–æ—Å—Ç–∞–≤–∫—É/, (msg) => {
  const chatId = msg.chat.id;

  // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫
  deliveryAttempts[chatId] = 0;

  bot.sendMessage(
    chatId,
    `–ß—Ç–æ–±—ã –æ—Ñ–æ—Ä–º–∏—Ç—å –¥–æ—Å—Ç–∞–≤–∫—É, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –∞–Ω–∫–µ—Ç—É –ø–æ —Å–ª–µ–¥—É—é—â–µ–º—É –æ–±—Ä–∞–∑—Ü—É:\n\n` +
      `*–û–±—Ä–∞–∑–µ—Ü:*\n\n` +
      `*–ù–∏–∫–Ω–µ–π–º:* –í–∞—à_–ù–∏–∫–Ω–µ–π–º\n` +
      `–¢–æ–≤–∞—Ä—ã: –í–∞—à–∏_–¢–æ–≤–∞—Ä—ã\n` +
      `*–ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã:* x y z\n` +
      `*–î–∞—Ç–∞ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –¥–æ—Å—Ç–∞–≤–∫–∏:* 27/11/2024\n\n` +
      `*–°–æ–æ–±—â–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ —Å—Ç—Ä–æ–≥–æ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å —Ñ–æ—Ä–º–∞—Ç—É!*`,
    { parse_mode: 'Markdown' }
  );
});

// –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —Ñ–æ—Ä–º–∞—Ç—É –¥–æ—Å—Ç–∞–≤–∫–∏
bot.on('message', (msg) => {
  const chatId = msg.chat.id;
  const text = msg.text;

  // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –≤–≤–æ–¥–∏–ª –∫–æ–º–∞–Ω–¥—É /–æ—Ñ–æ—Ä–º–∏—Ç—å_–¥–æ—Å—Ç–∞–≤–∫—É, –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º
  if (deliveryAttempts[chatId] === undefined) return;

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ —Ñ–æ—Ä–º–∞—Ç—É
  if (deliveryFormatRegex.test(text)) {
    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫ –ø–æ–ø—ã—Ç–æ–∫, –µ—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ
    deliveryAttempts[chatId] = 0;

    const match = text.match(deliveryFormatRegex);
    const deliveryData = {
      nickname: match[1].trim(),
      items: match[2].trim(),
      coordinates: match[3].trim(),
      date: match[4].trim(),
    };

    // –î–æ–±–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç–∞–≤–æ–∫ –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º
    deliveries.push(deliveryData);
    saveDeliveries();

    // –û–ø–æ–≤–µ—â–µ–Ω–∏–µ –∏–≥—Ä–æ–∫–∞ –æ –ø—Ä–∏–Ω—è—Ç–∏–∏ –∑–∞—è–≤–∫–∏
    bot.sendMessage(chatId, '‚úÖ –í–∞—à–∞ –∑–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É!');

    // –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞—è–≤–∫–∏ –≤ –∞–¥–º–∏–Ω—Å–∫–∏–π —á–∞—Ç —Å –∫–Ω–æ–ø–∫–æ–π "–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –¥–æ—Å—Ç–∞–≤–∫—É"
    bot.sendMessage(
      adminChatId,
      `üì¶ –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ –¥–æ—Å—Ç–∞–≤–∫—É:\n\n` +
        `*–ù–∏–∫–Ω–µ–π–º:* ${deliveryData.nickname}\n` +
        `*–¢–æ–≤–∞—Ä—ã:* ${deliveryData.items}\n` +
        `*–ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã:* ${deliveryData.coordinates}\n` +
        `*–î–∞—Ç–∞ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –¥–æ—Å—Ç–∞–≤–∫–∏:* ${deliveryData.date}`,
      {
        parse_mode: 'Markdown',
        reply_markup: {
          inline_keyboard: [
            [
              {
                text: '–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –¥–æ—Å—Ç–∞–≤–∫—É',
                callback_data: `confirm_${deliveryData.nickname}`,
              },
            ],
          ],
        },
      }
    );
  } else {
    // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫
    deliveryAttempts[chatId] = (deliveryAttempts[chatId] || 0) + 1;

    if (deliveryAttempts[chatId] >= 3) {
      // –°–±—Ä–æ—Å –ø–æ—Å–ª–µ —Ç—Ä–µ—Ö –Ω–µ—É–¥–∞—á–Ω—ã—Ö –ø–æ–ø—ã—Ç–æ–∫
      delete deliveryAttempts[chatId];
      bot.sendMessage(
        chatId,
        `‚ùå –¢—Ä–∏–∂–¥—ã –≤–≤–µ–¥–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –ø–æ –æ–±—Ä–∞–∑—Ü—É. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞, –Ω–∞—á–∞–≤ —Å –∫–æ–º–∞–Ω–¥—ã /–æ—Ñ–æ—Ä–º–∏—Ç—å_–¥–æ—Å—Ç–∞–≤–∫—É.`
      );
    } else {
      // –°–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ
      bot.sendMessage(
        chatId,
        `‚ùå –°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ñ–æ—Ä–º–∞—Ç—É.\n\n` +
          `*–û–±—Ä–∞–∑–µ—Ü:*\n\n` +
          `*–ù–∏–∫–Ω–µ–π–º:* –í–∞—à_–ù–∏–∫–Ω–µ–π–º\n` +
          `–¢–æ–≤–∞—Ä—ã: –í–∞—à–∏_–¢–æ–≤–∞—Ä—ã\n` +
          `*–ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã:* x y z\n` +
          `*–î–∞—Ç–∞ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –¥–æ—Å—Ç–∞–≤–∫–∏:* 27/11/2024\n\n` +
          `*–°–æ–æ–±—â–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ —Å—Ç—Ä–æ–≥–æ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å —Ñ–æ—Ä–º–∞—Ç—É!*`,
        { parse_mode: 'Markdown' }
      );
    }
  }
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ "–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –¥–æ—Å—Ç–∞–≤–∫—É"
bot.on('callback_query', (callbackQuery) => {
  const chatId = callbackQuery.message.chat.id;
  const data = callbackQuery.data;

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–≤—è–∑–∞–Ω–∞ –ª–∏ –∫–Ω–æ–ø–∫–∞ —Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ–º –¥–æ—Å—Ç–∞–≤–∫–∏
  if (data.startsWith('confirm_')) {
    const nickname = data.split('_')[1];

    // –£–¥–∞–ª—è–µ–º –∑–∞—è–≤–∫—É –∏–∑ —Å–ø–∏—Å–∫–∞
    deliveries = deliveries.filter((delivery) => delivery.nickname !== nickname);
    saveDeliveries();

    // –£–≤–µ–¥–æ–º–ª—è–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –∏ –∏–≥—Ä–æ–∫–∞
    bot.sendMessage(chatId, `‚úÖ –î–æ—Å—Ç–∞–≤–∫–∞ –¥–ª—è ${nickname} –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞.`);
    bot.sendMessage(
      callbackQuery.from.id,
      `‚úÖ –í–∞—à–∞ –¥–æ—Å—Ç–∞–≤–∫–∞ –±—ã–ª–∞ —É—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω—ã!`
    );

    // –£–±–∏—Ä–∞–µ–º –∫–Ω–æ–ø–∫—É –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è
    bot.editMessageReplyMarkup(
      { inline_keyboard: [] },
      { chat_id: chatId, message_id: callbackQuery.message.message_id }
    );
  }
});


bot.onText(/\/submit_case/, (msg) => {
  const chatId = msg.chat.id;

  bot.sendMessage(
    chatId,
    `–ß—Ç–æ–±—ã –ø–æ–¥–∞—Ç—å –∑–∞—è–≤–ª–µ–Ω–∏–µ –≤ —Å—É–¥, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –∞–Ω–∫–µ—Ç—É –≤ —Å–ª–µ–¥—É—é—â–µ–º —Ñ–æ—Ä–º–∞—Ç–µ:\n\n` +
      `*–û–±—Ä–∞–∑–µ—Ü:*\n\n` +
      `*–ö—Ç–æ –ø–æ–¥–∞–µ—Ç:* –í–∞—à–µ –∏–º—è\n` +
      `*–ù–∞ –∫–æ–≥–æ:* –û—Ç–≤–µ—Ç—á–∏–∫\n` +
      `*–ß—Ç–æ –ø—Ä–æ–∏–∑–æ—à–ª–æ:* –ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ\n` +
      `*–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:* –î–µ—Ç–∞–ª–∏\n` +
      `*–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è:* –í–∞—à–∏ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è\n\n` +
      `_*–°–æ–æ–±—â–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ —Å—Ç—Ä–æ–≥–æ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å —Ñ–æ—Ä–º–∞—Ç—É!*_`,
    { parse_mode: 'Markdown' }
  );
});

// –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∞ –∑–∞—è–≤–ª–µ–Ω–∏—è –≤ —Å—É–¥
bot.on('message', (msg) => {
  const chatId = msg.chat.id;
  const text = msg.text;

  const courtFormatRegex =
    /–ö—Ç–æ –ø–æ–¥–∞–µ—Ç: (.+)\n–ù–∞ –∫–æ–≥–æ: (.+)\n–ß—Ç–æ –ø—Ä–æ–∏–∑–æ—à–ª–æ: (.+)\n–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è: (.+)\n–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è: (.+)/;

  if (courtFormatRegex.test(text)) {
    const match = text.match(courtFormatRegex);
    const courtData = {
      plaintiff: match[1],
      defendant: match[2],
      description: match[3],
      details: match[4],
      demands: match[5],
    };


    bot.sendMessage(
      adminChatId,
      `–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –≤ —Å—É–¥:\n\n` +
        `–ö—Ç–æ –ø–æ–¥–∞–µ—Ç: ${courtData.plaintiff}\n` +
        `–ù–∞ –∫–æ–≥–æ: ${courtData.defendant}\n` +
        `–ß—Ç–æ –ø—Ä–æ–∏–∑–æ—à–ª–æ: ${courtData.description}\n` +
        `–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è: ${courtData.details}\n` +
        `–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è: ${courtData.demands}`
    );

    bot.sendMessage(chatId, '‚úÖ –í–∞—à–µ –∑–∞—è–≤–ª–µ–Ω–∏–µ –≤ —Å—É–¥ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!');
  }
});
// –ö–æ–º–∞–Ω–¥–∞ /start
// –ö–æ–º–∞–Ω–¥–∞ /start
bot.onText(/\/start/, (msg) => {
  const chatId = msg.chat.id;

  const message = `–ü—Ä–∏–≤–µ—Ç! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç–∞! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –≤—Å—Ç—Ä–æ–µ–Ω–Ω—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –Ω–∏–∂–µ –¥–ª—è –≤—ã–±–æ—Ä–∞ –∫–æ–º–∞–Ω–¥—ã.`;

  bot.sendMessage(chatId, message, {
    reply_markup: {
      keyboard: [
        [{ text: '/submit_case' }], // –ü–æ–¥–∞—Ç—å –≤ —Å—É–¥
        [{ text: '/register @username' }],    // –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è
        [{ text: '/help' }],        // –ü–æ–º–æ—â—å
        [{ text: '/–æ—Ñ–æ—Ä–º–∏—Ç—å_–¥–æ—Å—Ç–∞–≤–∫—É' }], // –î–æ—Å—Ç–∞–≤–∫–∞
      ],
      resize_keyboard: true, // –ê–¥–∞–ø—Ç–∏–≤–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞
      one_time_keyboard: false, // –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –æ—Å—Ç–∞–µ—Ç—Å—è –Ω–∞ —ç–∫—Ä–∞–Ω–µ
    },
  });
});
